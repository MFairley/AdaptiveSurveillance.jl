library(here)
library(isotone)
?isotone
?gpava
?seq
p = seq(from = 0.1, to = 1, length.out = 20)
source('~/Projects/AdaptiveSurveillance/test/test_isotone.R')
?rbinom
source('~/Projects/AdaptiveSurveillance/test/test_isotone.R')
source('~/Projects/AdaptiveSurveillance/test/test_isotone.R')
warnings()
source('~/Projects/AdaptiveSurveillance/test/test_isotone.R')
X
source('~/Projects/AdaptiveSurveillance/test/test_isotone.R')
X
source('~/Projects/AdaptiveSurveillance/test/test_isotone.R')
source('~/Projects/AdaptiveSurveillance/test/test_isotone.R')
ggplot(dt, aes(t, W)) + geom_line()
?isoreg
isoreg(dt[, t], wt[, W])
isoreg(dt[, t], dt[, W])
gpava(y = dt[, W])
arcsin
?asin
gpava(y = 2 * asin(sqrt(dt[, W])))
gpava(y = 2 * asin(sqrt(dt[, W] / n)))
beta = gpava(y = 2 * asin(sqrt(dt[, W] / n)))$x
beta
?asin
asin(2)
sin(2)
asin(0.909)
asin(sin(2))
asin(sin(1))
asin(sin(1.5))
asin(sin(1.8))
# transform beta to probabilities
pbar = (sin (beta / 2))^2
pbar
source('~/Projects/AdaptiveSurveillance/test/test_isotone.R')
ptrue
pbar
?gpava
?isotone::gpava
?t,test
?t.test
?glm
?isotone:gpava
?isotone::gpava
library(data.table)
list.test <- list("A" = list("AA" = 1, "BB" = 2), "B" = list("AA" = 3, "BB" = 4))
dt.test <- data.table(
first.idx = rep(c("A", "B"), each=2),
second.idx = rep(c("AA", "BB"), times = 2)
)
dt.test
list(rep(c("A", "B"), each=2))
list.test
dt.test <- data.table(
first.idx = list(rep(c("A", "B"), each=2)),
second.idx = list(rep(c("AA", "BB"), times = 2))
)
dt.test
list.test
dt.test <- data.table(
first.idx = rep(c("A", "B"), each=2),
second.idx = rep(c("AA", "BB"), times = 2)
)
dt.test
list.test[["A"]][["AA"]]
list.test
data.table(list.test)
rbindlist(list.test)
names(list.test)
dt.lt <- rbindlist(list.test)
dt.lt
dt.lt[, fi := names(list.test)]
dt.lt
dt.lt <- rbindlist(list.test)
dt.lt[, first.idx := names(list.test)]
dt.lt <- melt(dt.lt, id.vars = "first.dx")
dt.lt
dt.lt <- melt(dt.lt, id.vars = first.dx)
dt.lt <- melt(dt.lt, id.vars = first.idx)
dt.lt <- melt(dt.lt, id.vars = "first.idx")
dt.lt
dt.lt <- melt(dt.lt, id.vars = "first.idx", variable.name = "second.idx",
value.name = "result")
dt.lt <- rbindlist(list.test)
dt.lt[, first.idx := names(list.test)]
dt.lt <- melt(dt.lt, id.vars = "first.idx", variable.name = "second.idx",
value.name = "result")
dt.lt
merge(dt.test, dt.lt, by = c("first.idx", "second.idx"))
library(ggplot2)
?scale_fill_discrete
